# Generated by Django 4.0.4 on 2022-05-02 08:42

from django.db import migrations

from django.contrib.auth.models import User
from django.contrib.auth.models import Group

import datetime

def beginning(apps, schema_editor):
    
    # Суперпользователь id-1
    user = User.objects.create_superuser(username='root',
    email='service26022022@mail.ru',
    password='SsNn5678+-@')
    print("Суперпользователь создан")
            
    # Группа менеджеров
    managers = Group.objects.get_or_create(name = 'Managers')
    managers = Group.objects.get(name='Managers')
    print("Группа менеджеров создана")
    
    # Пользователь с ролью менеджера id2
    user = User.objects.create_user(username='manager', password='Ss0066+-')
    managers.user_set.add(user)
    print("Менеджер добавлен в группу менеджеров")

    # Простые пользователи (заявители) id3-7
    user = User.objects.create_user(username='user1', password='Uu0066+-', first_name='Әсем', last_name = 'Исағали', email = 'user1@mail.ru', last_login=datetime.datetime.now())
    user = User.objects.create_user(username='user2', password='Uu0066+-', first_name='Ержан', last_name = 'Айтмағанбет', email = 'user2@mail.ru', last_login=datetime.datetime.now())
    user = User.objects.create_user(username='user3', password='Uu0066+-', first_name='Олжас', last_name = 'Рымбеков', email = 'user3@mail.ru', last_login=datetime.datetime.now())
    user = User.objects.create_user(username='user4', password='Uu0066+-', first_name='Гүлназ', last_name = 'Жанадилова', email = 'user4@mail.ru', last_login=datetime.datetime.now())
    user = User.objects.create_user(username='user5', password='Uu0066+-', first_name='Диана', last_name = 'Әкебек', email = 'user5@mail.ru', last_login=datetime.datetime.now())
    print("Созданы простые пользователи")
        
    ##### Должности #####
    
    Position = apps.get_model("orlov", "Position")
   
    position = Position()
    position.id = 1
    position.title = 'Директор'
    position.save()
   
    position = Position()
    position.id = 2
    position.title = 'Бригадир'
    position.save()

    position = Position()
    position.id = 3
    position.title = 'Слесарь-сантехник'
    position.save()
    
    position = Position()
    position.id = 4
    position.title = 'Лифтер'
    position.save()

    position = Position()
    position.id = 5
    position.title = 'Электрик'
    position.save()

    print("Должности добавлены в БД")

    ##### Сотрудник #####

    Employee = apps.get_model("orlov", "Employee")
    
    employee = Employee()
    employee.surname = 'Асатулла'
    employee.name = 'Еркебұлан'
    employee.patronymic = 'Даниярұлы'
    employee.sex = 'М'
    employee.birthday = '1980-02-04 12:00:00'
    employee.address = 'ул. Ак. Чокина, 34-2'
    employee.phone = '+7-705-111-1111'
    employee.position_id = 1
    employee.save()
    
    employee = Employee()
    employee.surname = 'Кәкенов'
    employee.name = 'Мәди'
    employee.patronymic = 'Серікұлы'
    employee.sex = 'М'
    employee.birthday = '1976-05-05 12:00:00'
    employee.address = 'ул. Ак. Сатпаева, 54-28'
    employee.phone = '+7-705-222-2222'
    employee.position_id = 2
    employee.save()
    
    employee = Employee()
    employee.surname = 'Қадыров'
    employee.name = 'Жалғас'
    employee.patronymic = 'Ықласұлы'
    employee.sex = 'М'
    employee.birthday = '1988-03-03 12:00:00'
    employee.address = 'ул. Мира, 21-4'
    employee.phone = '+7-705-333-3333'
    employee.position_id = 3
    employee.save()
    
    employee = Employee()
    employee.surname = 'Жүсіпов'
    employee.name = 'Болатбек'
    employee.patronymic = 'Абайұлы'
    employee.sex = 'М'
    employee.birthday = '1990-06-06 12:00:00'
    employee.address = 'ул. Каирбаева, 12-12'
    employee.phone = '+7-705-444-4444'
    employee.position_id = 4
    employee.save()
    
    employee = Employee()    
    employee.surname = 'Беккалиев'
    employee.name = 'Мирас'
    employee.patronymic = 'Нұрланұлы'
    employee.sex = 'М'
    employee.birthday = '1971-07-07 12:00:00'
    employee.address = 'ул. Торайгырова, 12-14'
    employee.phone = '+7-705-555-5555'
    employee.position_id = 5
    employee.save()
    
    print("Сотрудники добавлены в БД")

    ##### Персона (клиент) #####

    Person = apps.get_model("orlov", "Person")
    
    person = Person()
    person.user_id = 3
    person.phone = '+7-701-111-1111'
    person.address = 'ул. Ак. Сатпаева, 13-4'   
    person.save()

    person = Person()
    person.user_id = 4
    person.phone = '+7-701-111-2222'
    person.address = 'ул.Торагйырова, 23-18'   
    person.save()

    person = Person()
    person.user_id = 5
    person.phone = '+7-701-111-3333'
    person.address = 'ул. Дюсенова, 7-12'   
    person.save()

    person = Person()
    person.user_id = 6
    person.phone = '+7-701-111-4444'
    person.address = 'ул. Ак. Сатпаева, 23-1'   
    person.save()

    person = Person()
    person.user_id = 7
    person.phone = '+7-701-111-5555'
    person.address = 'ул. Камзина, 45-81'   
    person.save()
    
    print("Клиенты добавлены в БД")

    ##### Персона (клиент) #####

    Application = apps.get_model("orlov", "Application")
    
    application = Application()
    application.datea = '2022-04-01 12:00:00'
    application.user_id = 3
    application.title = 'Заявка на ремонт протекающего крана'
    application.details = 'Протекает кран на кухне'   
    application.save()

    Movement = apps.get_model("orlov", "Movement")

    movement = Movement()
    movement.application_id = 1
    movement.datem = '2022-04-01 13:00:00'
    movement.status = 'Заявка принята'
    movement.details = ''
    movement.employee_id = 3
    movement.save()

    movement = Movement()
    movement.application_id = 1
    movement.datem = '2022-04-01 17:00:00'
    movement.status = 'Заявка исполнена'
    movement.details = ''
    movement.employee_id = 3
    movement.save()

    application = Application()
    application.datea = '2022-04-02 12:00:00'
    application.user_id = 4
    application.title = 'Заявка на ремонт сливного бачка'
    application.details = 'Протекает сливной бачок'   
    application.save()

    movement = Movement()
    movement.application_id = 2
    movement.datem = '2022-04-02 13:00:00'
    movement.status = 'Заявка принята'
    movement.details = ''
    movement.employee_id = 3
    movement.save()

    movement = Movement()
    movement.application_id = 2
    movement.datem = '2022-04-02 18:00:00'
    movement.status = 'Заявка исполнена'
    movement.details = ''
    movement.employee_id = 3
    movement.save()

    application = Application()
    application.datea = '2022-04-03 12:00:00'
    application.user_id = 5
    application.title = 'Заявка на установку стиральной машинки'
    application.details = 'Заявка на установку стиральной машинки'   
    application.save()

    movement = Movement()
    movement.application_id = 3
    movement.datem = '2022-04-03 13:00:00'
    movement.status = 'Заявка принята'
    movement.details = ''
    movement.employee_id = 3
    movement.save()

    movement = Movement()
    movement.application_id = 3
    movement.datem = '2022-04-05 17:00:00'
    movement.status = 'Заявка исполнена'
    movement.details = ''
    movement.employee_id = 3
    movement.save()

    application = Application()
    application.datea = '2022-04-04 12:00:00'
    application.user_id = 6
    application.title = 'Не работает кнопка 8-го этажа в лифте'
    application.details = 'Не работает кнопка 8-го этажа в лифте'   
    application.save()

    movement = Movement()
    movement.application_id = 4
    movement.datem = '2022-04-04 14:00:00'
    movement.status = 'Заявка принята'
    movement.details = ''
    movement.employee_id = 4
    movement.save()

    movement = Movement()
    movement.application_id = 4
    movement.datem = '2022-04-04 16:00:00'
    movement.status = 'Заявка исполнена'
    movement.details = ''
    movement.employee_id = 4
    movement.save()

    application = Application()
    application.datea = '2022-04-05 14:00:00'
    application.user_id = 7
    application.title = 'Не работает лифт'
    application.details = 'Не работает лифт'   
    application.save()

    movement = Movement()
    movement.application_id = 5
    movement.datem = '2022-04-05 14:00:00'
    movement.status = 'Заявка принята'
    movement.details = ''
    movement.employee_id = 4
    movement.save()

    movement = Movement()
    movement.application_id = 5
    movement.datem = '2022-04-05 15:00:00'
    movement.status = 'Заявка исполнена'
    movement.details = ''
    movement.employee_id = 4
    movement.save()

    application = Application()
    application.datea = '2022-04-06 10:00:00'
    application.user_id = 3
    application.title = 'Не горит освещение на лестничной площадке'
    application.details = 'Не горит освещение на лестничной площадке'   
    application.save()

    movement = Movement()
    movement.application_id = 6
    movement.datem = '2022-04-06 10:00:00'
    movement.status = 'Заявка принята'
    movement.details = ''
    movement.employee_id = 5
    movement.save()

    movement = Movement()
    movement.application_id = 6
    movement.datem = '2022-04-07 09:00:00'
    movement.status = 'Заявка исполнена'
    movement.details = ''
    movement.employee_id = 5
    movement.save()

    application = Application()
    application.datea = '2022-04-08 10:00:00'
    application.user_id = 4
    application.title = 'Не горит освещение на лестничной площадке'
    application.details = 'Не горит освещение на лестничной площадке'   
    application.save()

    movement = Movement()
    movement.application_id = 7
    movement.datem = '2022-04-08 10:00:00'
    movement.status = 'Заявка принята'
    movement.details = ''
    movement.employee_id = 5
    movement.save()

    movement = Movement()
    movement.application_id = 7
    movement.datem = '2022-04-08 09:00:00'
    movement.status = 'Заявка исполнена'
    movement.details = ''
    movement.employee_id = 5
    movement.save()

    print("Заявки добавлены в БД")

class Migration(migrations.Migration):

    dependencies = [
        ('orlov', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(beginning),        
    ]

